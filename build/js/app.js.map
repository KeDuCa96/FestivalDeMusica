{"version":3,"sources":["app.js"],"names":["iniciarApp","crearGaleria","scrollNav","navFija","barra","document","querySelector","sobreFestival","body","window","addEventListener","getBoundingClientRect","bottom","classList","add","remove","querySelectorAll","forEach","enlace","clickHandler","preventDefault","offsetTop","target","attributes","href","value","headerHeight","offsetHeight","scroll","top","behavior","galeria","i","imagen","createElement","innerHTML","onclick","mostrarImagen","appendChild","id","overlay","cerraModal","textContent"],"mappings":"AAIA,SAASA,aACLC,eACAC,YACAC,UAKJ,SAASA,UACL,MAAMC,EAAQC,SAASC,cAAc,WAC/BC,EAAgBF,SAASC,cAAc,mBACvCE,EAAOH,SAASC,cAAc,QAEpCG,OAAOC,iBAAiB,UAAU,WAE1BH,EAAcI,wBAAwBC,QAAS,GAC/CR,EAAMS,UAAUC,IAAI,QACpBN,EAAKK,UAAUC,IAAI,UAEnBV,EAAMS,UAAUE,OAAO,QACvBP,EAAKK,UAAUE,OAAO,YAOlC,SAASb,YAGUG,SAASW,iBAAiB,2BAClCC,QAASC,IACZA,EAAOR,iBAAiB,QAASS,gBAIzC,SAASA,aAAaD,GAClBA,EAAOE,iBAGP,IAAIC,EADYhB,SAASC,cAAcY,EAAOI,OAAOC,WAAWC,KAAKC,OAC7CJ,UACxB,MACMK,EADSrB,SAASC,cAAc,WACVqB,aAE5BC,OAAO,CACHC,IAAKR,EAAYK,EACjBI,SAAU,WAKlB,SAAS7B,eACL,MAAM8B,EAAU1B,SAASC,cAAc,qBAEvC,IAAI,IAAI0B,EAAI,EAAGA,GAAK,GAAIA,IAAK,CACzB,MAAMC,EAAS5B,SAAS6B,cAAc,WACtCD,EAAOE,UAAY,iDACmBH,4EACAA,8GACkCA,2CAExEC,EAAOG,QAAU,WACbC,cAAcL,IAGlBD,EAAQO,YAAYL,IAK5B,SAASI,cAAcE,GAEnB,MAAMN,EAAS5B,SAAS6B,cAAc,WACtCD,EAAOE,UAAY,8CACoBI,yEACAA,2GACkCA,uCAIzE,MAAMC,EAAWnC,SAAS6B,cAAc,OACxCM,EAAQF,YAAYL,GACpBO,EAAQ3B,UAAUC,IAAI,WACtB0B,EAAQJ,QAAU,WACd,MAAM5B,EAAOH,SAASC,cAAc,QACpCE,EAAK8B,YAAYE,GACjBhC,EAAKK,UAAUE,OAAO,cACtByB,EAAQzB,UAIZ,MAAM0B,EAAapC,SAAS6B,cAAc,KAC1CO,EAAWC,YAAc,IACzBD,EAAW5B,UAAUC,IAAI,cACzB2B,EAAWL,QAAU,WACjB,MAAM5B,EAAOH,SAASC,cAAc,QACpCE,EAAK8B,YAAYE,GACjBhC,EAAKK,UAAUE,OAAO,cACtByB,EAAQzB,UAEZyB,EAAQF,YAAYG,GAEpB,MAAMjC,EAAOH,SAASC,cAAc,QACpCE,EAAK8B,YAAYE,GACjBhC,EAAKK,UAAUC,IAAI,cA5GvBT,SAASK,iBAAiB,oBAAoB,WAC1CV","file":"app.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){ //* Recordemo que el DOMContentLoaded nos permite ejecutar funciones una vez haya cargado todo el DOM y puede recibir acciones de js\r\n    iniciarApp();\r\n})\r\n\r\nfunction iniciarApp() {   //* Arrancamos nuestra app. Una vez inice una función que pueda iniciar otra función se aligera un poco el contentLoaded.\r\n    crearGaleria();       //* Cómo vamos a usar varias funciones, primero las llamamos desde el addEventListener y luego las podemos llamar por otras funcionees.\r\n    scrollNav();\r\n    navFija();\r\n}\r\n\r\n\r\n//? Navegacion fija\r\nfunction navFija() {\r\n    const barra = document.querySelector('.header');\r\n    const sobreFestival = document.querySelector('.sobre-festival');\r\n    const body = document.querySelector('body'); \r\n    \r\n    window.addEventListener('scroll', function(){ //* recordemos que el window selecciona o apunta al DOM ya cargado. Cada vez que hagamos srcoll estaremos esuchando algo.\r\n\r\n        if( sobreFestival.getBoundingClientRect().bottom <-0) { //* Este metodo nos sirve para identificar la posicion del elemento que hayamos seleccionado. Nos da toda la información para saber la posición exacta en el DOM. Con el botton estamos indicando que cuando toque la parte inferior del elemento selcciondo con la parte superior del DOM(donde ya encontramos la barra de marcador del browser) va a poder ejecutar la función o acción que querramos.\r\n            barra.classList.add('fijo'); //* Cuando toque el botton del elemento agregar la clase fijo\r\n            body.classList.add('body');\r\n        }else{\r\n            barra.classList.remove('fijo'); //* cuando ya pase el bottom del elemento elimina la clase\r\n            body.classList.remove('body');  \r\n        }\r\n    })\r\n\r\n}\r\n\r\n//? Smooth Srcoll\r\nfunction scrollNav() {\r\n\r\n    //* Leemos los enlaces\r\n    const enlace = document.querySelectorAll('.navegacion-principal a');\r\n    enlace.forEach( enlace => {     //* toca iterar en cada uno de los enlace ya que no se puede asociar una funcion a un queryselectorall.\r\n        enlace.addEventListener('click', clickHandler); \r\n    });\r\n}\r\n\r\nfunction clickHandler(enlace) {\r\n    enlace.preventDefault(); //* con esto prevenimos el comportamiento por default de la funcioon\r\n        \r\n    const seccion = document.querySelector(enlace.target.attributes.href.value);//* target.attributes nos sirve para leer atributo y con href.value nos traemos el valor solo del atributo href\r\n    let offsetTop = seccion.offsetTop;  //* offsetTop nos indica la cantidad de pixeles que hay entre el borde supeior del elemento padre mas cercano.   \r\n    const header = document.querySelector('.header');   \r\n    const headerHeight = header.offsetHeight;  //* nos da el height del elemento incluyendo padding y border en pixeles\r\n\r\n    scroll({ //* Scroll nos permite desplazarnos a un punto exacto.\r\n        top: offsetTop - headerHeight,\r\n        behavior: 'smooth'\r\n    });\r\n}\r\n\r\n//? Añadimos imagenes\r\nfunction crearGaleria(){\r\n    const galeria = document.querySelector('.galeria-imagenes');    //* Hacemos el selector\r\n    \r\n    for(let i = 1; i <= 12; i++) {  //* inciamos en 1 porque es el nombre de la primera imagen.\r\n        const imagen = document.createElement('picture');  //* Creamos el elemento\r\n        imagen.innerHTML = `\r\n            <source srcset=\"build/img/thumb/${i}.avif\" type=\"image/avif\"> \r\n            <source srcset=\"build/img/thumb/${i}.webp\" type=\"image/webp\"> \r\n            <img loading=\"lazy\" width=\"200\" height=\"300\" src=\"build/img/thumb/${i}.jpg\" alt=\"imagen vocalista\">\r\n        `;\r\n        imagen.onclick = function() { //* Con el onclik podemos identificar a que le estamos dando click\r\n            mostrarImagen(i);\r\n        }\r\n\r\n        galeria.appendChild(imagen); //* Recordemos que el appenChild nos agrega un elemento al final.\r\n    }\r\n}\r\n\r\n//? agrandamos la imagen con un clik\r\nfunction mostrarImagen(id) {\r\n    //* Es lo mismo de como mostramos las imagenes pequeñas, solo se activa con un clik y muestra las mas grandes\r\n    const imagen = document.createElement('picture');\r\n    imagen.innerHTML = `\r\n        <source srcset=\"build/img/grande/${id}.avif\" type=\"image/avif\"> \r\n        <source srcset=\"build/img/grande/${id}.webp\" type=\"image/webp\"> \r\n        <img loading=\"lazy\" width=\"200\" height=\"300\" src=\"build/img/grande/${id}.jpg\" alt=\"imagen vocalista\">\r\n    `;\r\n\r\n//* Creamos un div para poder oscurecer la pantalla al momento de agrandar la imagen, mas conocido como overlay.\r\n    const overlay  = document.createElement('DIV');\r\n    overlay.appendChild(imagen); //* agregamos la imagen \r\n    overlay.classList.add('overlay'); //* Le damos una clase para poder aplicar css\r\n    overlay.onclick = function() {      //* Con este evento podemos dar click en cualdquier parte fuera del overlay y cerrar la imagen\r\n        const body = document.querySelector('body');\r\n        body.appendChild(overlay);\r\n        body.classList.remove('fijar-body'); \r\n        overlay.remove(); //* Cerramos o removemos el overlay. Remove es un metodo de js.\r\n\r\n    }\r\n//* Cerrar ventana modal\r\n    const cerraModal = document.createElement('P'); //* Creamos un parrafo\r\n    cerraModal.textContent = 'X';                   //* Añadimos la X para poder cerrar la ventana\r\n    cerraModal.classList.add('btn-cerrar');         //* Agregamos la clase al parrafo para poder aplicarle CSS\r\n    cerraModal.onclick = function(){\r\n        const body = document.querySelector('body');\r\n        body.appendChild(overlay);                  //* Con este query y appendChild agregamos el overlay en el body\r\n        body.classList.remove('fijar-body');        \r\n        overlay.remove();  \r\n    }\r\n    overlay.appendChild(cerraModal); //* Lo agregamos al overlay para poder visaulizarlo \r\n\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay); \r\n    body.classList.add('fijar-body'); \r\n}"]}